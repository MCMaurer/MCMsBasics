draw_key = draw_key_point,
draw_panel = draw_panel_function)
geom_tuftebox <- function(mapping = NULL, data = NULL, stat = "TufteBox",
position = "identity", show.legend = NA,
na.rm = FALSE, inherit.aes = TRUE, ...){
str(ggplot2::layer(
stat = stat,
data = data,
mapping = mapping,
geom = GeomTufteBox,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
))
ggplot2::layer(
stat = stat,
data = data,
mapping = mapping,
geom = GeomTufteBox,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
library(tidyr)
library(dplyr)
library(ggplot2)
library(grid)
StatTufteBox <- ggproto("StatTufteBox", Stat,
compute_group = function(data, scales) {
probs <- c(0, 0.25, 0.5, 0.75, 1)
qq <- quantile(data$y, probs = probs, na.rm = T)
out <- qq %>% as.list() %>% as.data.frame()
names(out) <- c("ymin", "lower", "median",
"upper", "ymax")
out$x <- data$x[1]
out
print(scales)
},
required_aes = c("x", "y")
)
stat_tuftebox <- function(mapping = NULL, data = NULL, geom = "TufteBox",
position = "identity", show.legend = NA,
outliers = TRUE, inherit.aes = TRUE, ...){
ggplot2::layer(
stat = StatTufteBox,
data = data,
mapping = mapping,
geom = geom,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(outliers = outliers, ...)
)
}
library(scales)
draw_panel_function <- function(data, panel_scales, coord){
coords <- coord$transform(data, panel_scales) %>%
mutate(lower = rescale(lower, from = panel_scales$y.range),
upper = rescale(upper, from = panel_scales$y.range),
median = rescale(median, from = panel_scales$y.range))
median <- pointsGrob(x = coords$x,
y = coords$median,
pch = coords$shape,
size = unit(coords$size*3, "pt"))
lower <- segmentsGrob(x0 = coords$x,
x1 = coords$x,
y0 = coords$ymin,
y1 = coords$lower,
gp = gpar(lwd = coords$size))
upper <- segmentsGrob(x0 = coords$x,
x1 = coords$x,
y0 = coords$upper,
y1 = coords$ymax,
gp = gpar(lwd = coords$size))
gTree(children = gList(median, lower, upper))
}
GeomTufteBox <- ggproto("GeomTufteBox", Geom,
required_aes = c("x", "ymin", "lower", "median", "upper", "ymax"),
default_aes = aes(shape = 19, size = 2),
draw_key = draw_key_point,
draw_panel = draw_panel_function)
geom_tuftebox <- function(mapping = NULL, data = NULL, stat = "TufteBox",
position = "identity", show.legend = NA,
na.rm = FALSE, inherit.aes = TRUE, ...){
ggplot2::layer(
stat = stat,
data = data,
mapping = mapping,
geom = GeomTufteBox,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
library(tidyr)
library(dplyr)
library(ggplot2)
library(grid)
StatTufteBox <- ggproto("StatTufteBox", Stat,
compute_group = function(data, scales) {
probs <- c(0, 0.25, 0.5, 0.75, 1)
qq <- quantile(data$y, probs = probs, na.rm = T)
out <- qq %>% as.list() %>% as.data.frame()
names(out) <- c("ymin", "lower", "median",
"upper", "ymax")
out$x <- data$x[1]
out
},
required_aes = c("x", "y")
)
stat_tuftebox <- function(mapping = NULL, data = NULL, geom = "TufteBox",
position = "identity", show.legend = NA,
outliers = TRUE, inherit.aes = TRUE, ...){
ggplot2::layer(
stat = StatTufteBox,
data = data,
mapping = mapping,
geom = geom,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(outliers = outliers, ...)
)
}
library(scales)
draw_panel_function <- function(data, panel_scales, coord){
coords <- coord$transform(data, panel_scales) %>%
mutate(lower = rescale(lower, from = panel_scales$y.range),
upper = rescale(upper, from = panel_scales$y.range),
median = rescale(median, from = panel_scales$y.range))
median <- pointsGrob(x = coords$x,
y = coords$median,
pch = coords$shape,
size = unit(coords$size*3, "pt"))
lower <- segmentsGrob(x0 = coords$x,
x1 = coords$x,
y0 = coords$ymin,
y1 = coords$lower,
gp = gpar(lwd = coords$size))
upper <- segmentsGrob(x0 = coords$x,
x1 = coords$x,
y0 = coords$upper,
y1 = coords$ymax,
gp = gpar(lwd = coords$size))
gTree(children = gList(median, lower, upper))
}
GeomTufteBox <- ggproto("GeomTufteBox", Geom,
required_aes = c("x", "ymin", "lower", "median", "upper", "ymax"),
default_aes = aes(shape = 19, size = 2),
draw_key = draw_key_point,
draw_panel = draw_panel_function)
geom_tuftebox <- function(mapping = NULL, data = NULL, stat = "TufteBox",
position = "identity", show.legend = NA,
na.rm = FALSE, inherit.aes = TRUE, ...){
ggplot2::layer(
stat = stat,
data = data,
mapping = mapping,
geom = GeomTufteBox,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
library(tidyr)
library(dplyr)
library(ggplot2)
library(grid)
StatTufteBox <- ggproto("StatTufteBox", Stat,
compute_group = function(data, scales) {
probs <- c(0, 0.25, 0.5, 0.75, 1)
qq <- quantile(data$y, probs = probs, na.rm = T)
out <- qq %>% as.list() %>% as.data.frame()
names(out) <- c("ymin", "lower", "median",
"upper", "ymax")
out$x <- data$x[1]
out
},
required_aes = c("x", "y")
)
stat_tuftebox <- function(mapping = NULL, data = NULL, geom = "TufteBox",
position = "identity", show.legend = NA,
outliers = TRUE, inherit.aes = TRUE, ...){
ggplot2::layer(
stat = StatTufteBox,
data = data,
mapping = mapping,
geom = geom,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(outliers = outliers, ...)
)
}
library(scales)
draw_panel_function <- function(data, panel_scales, coord){
coords <- coord$transform(data, panel_scales) %>%
mutate(lower = rescale(lower, from = panel_scales$y.range),
upper = rescale(upper, from = panel_scales$y.range),
median = rescale(median, from = panel_scales$y.range))
median <- pointsGrob(x = coords$x,
y = coords$median,
pch = coords$shape,
size = unit(coords$size*3, "pt"))
lower <- segmentsGrob(x0 = coords$x,
x1 = coords$x,
y0 = coords$ymin,
y1 = coords$lower,
gp = gpar(lwd = coords$size))
upper <- segmentsGrob(x0 = coords$x,
x1 = coords$x,
y0 = coords$upper,
y1 = coords$ymax,
gp = gpar(lwd = coords$size))
gTree(children = gList(median, lower, upper))
}
GeomTufteBox <- ggproto("GeomTufteBox", Geom,
required_aes = c("x", "ymin", "lower", "median", "upper", "ymax"),
default_aes = aes(shape = 19, size = 2),
draw_key = draw_key_point,
draw_panel = draw_panel_function)
geom_tuftebox <- function(mapping = NULL, data = NULL, stat = "TufteBox",
position = "identity", show.legend = NA,
na.rm = FALSE, inherit.aes = TRUE, ...){
ggplot2::layer(
stat = stat,
data = data,
mapping = mapping,
geom = GeomTufteBox,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
ggsave("~/Downloads/tufte_boxplot.jpg")
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
storms
diamonds
data()
cars
cars_mpg
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
library(tidyr)
library(dplyr)
library(ggplot2)
library(grid)
diamonds
storms
storms %>%
ggplot(aes(x = year, y = wind)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
library(tidyr)
library(dplyr)
library(ggplot2)
library(grid)
StatTufteBox <- ggproto("StatTufteBox", Stat,
compute_group = function(data, scales) {
probs <- c(0, 0.25, 0.5, 0.75, 1)
qq <- quantile(data$y, probs = probs, na.rm = T)
out <- qq %>% as.list() %>% as.data.frame()
names(out) <- c("ymin", "lower", "median",
"upper", "ymax")
out$x <- data$x[1]
out
},
required_aes = c("x", "y")
)
stat_tuftebox <- function(mapping = NULL, data = NULL, geom = "TufteBox",
position = "identity", show.legend = NA,
outliers = TRUE, inherit.aes = TRUE, ...){
ggplot2::layer(
stat = StatTufteBox,
data = data,
mapping = mapping,
geom = geom,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(outliers = outliers, ...)
)
}
library(scales)
draw_panel_function <- function(data, panel_scales, coord){
coords <- coord$transform(data, panel_scales) %>%
mutate(lower = rescale(lower, from = panel_scales$y.range),
upper = rescale(upper, from = panel_scales$y.range),
median = rescale(median, from = panel_scales$y.range))
median <- pointsGrob(x = coords$x,
y = coords$median,
pch = coords$shape,
size = unit(coords$size*3, "pt"))
lower <- segmentsGrob(x0 = coords$x,
x1 = coords$x,
y0 = coords$ymin,
y1 = coords$lower,
gp = gpar(lwd = coords$size))
upper <- segmentsGrob(x0 = coords$x,
x1 = coords$x,
y0 = coords$upper,
y1 = coords$ymax,
gp = gpar(lwd = coords$size))
gTree(children = gList(median, lower, upper))
}
GeomTufteBox <- ggproto("GeomTufteBox", Geom,
required_aes = c("x", "ymin", "lower", "median", "upper", "ymax"),
default_aes = aes(shape = 19, size = 2),
draw_key = draw_key_point,
draw_panel = draw_panel_function)
geom_tuftebox <- function(mapping = NULL, data = NULL, stat = "TufteBox",
position = "identity", show.legend = NA,
na.rm = FALSE, inherit.aes = TRUE, ...){
ggplot2::layer(
stat = stat,
data = data,
mapping = mapping,
geom = GeomTufteBox,
position = position,
show.legend = show.legend,
inherit.aes = inherit.aes,
params = list(na.rm = na.rm, ...)
)
}
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
storms %>%
ggplot(aes(x = year, y = wind)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
storms
storms
storms$year
storms %>%
mutate(year = factor(year)) %>%
ggplot(aes(x = year, y = wind)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
storms %>%
#mutate(year = factor(year)) %>%
ggplot(aes(x = year, y = wind)) +
geom_boxplot() +
MCMsBasics::minimal_ggplot_theme()
storms %>%
mutate(year = factor(year)) %>%
ggplot(aes(x = year, y = wind, group = year)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
storms %>%
#mutate(year = factor(year)) %>%
ggplot(aes(x = year, y = wind, group = year)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
storms %>%
ggplot(aes(x = year, y = wind, group = year)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_point(alpha = 0.6) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_jitter(alpha = 0.6, height = 0) +
geom_tuftebox() +
MCMsBasics::minimal_ggplot_theme()
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_boxplot(notch = T)
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_boxplot(notch = F)
mtcars %>%
mutate(cyl = factor(cyl)) %>%
ggplot(aes(x = cyl, y = mpg)) +
geom_boxplot(notch = T)
p <- ggplot(mpg, aes(class, hwy))
p + geom_tuftebox()
p + geom_tuftebox() + geom_jitter(height = 0)
p + geom_tuftebox() + geom_jitter(height = 0, alpha = 0.2)
p + geom_tuftebox(position = "dodge") + geom_jitter(height = 0, alpha = 0.2)
p + geom_tuftebox(position = "dodge2") + geom_jitter(height = 0, alpha = 0.2)
p + geom_tuftebox(position = "dodge2", width = 1) + geom_jitter(height = 0, alpha = 0.2)
p + geom_tuftebox(position = position_dodge2(1)) + geom_jitter(height = 0, alpha = 0.2)
p + geom_tuftebox(position = position_dodge2(2)) + geom_jitter(height = 0, alpha = 0.2)
p + geom_tuftebox(position = position_dodge2(0)) + geom_jitter(height = 0, alpha = 0.2)
p + geom_tuftebox(position = position_dodge2(1)) + geom_jitter(height = 0, alpha = 0.2)
p + geom_tuftebox(position = position_dodge2(1.5)) + geom_jitter(height = 0, alpha = 0.2)
p + geom_tuftebox(position = position_dodge2(0.5)) + geom_jitter(height = 0, alpha = 0.2)
library(MCMsBasics)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(MCMsBasics)
library(dplyr)
library(ggplot2)
test <- tibble(height = rexp(20, 10), time = 1:20)
test[c(4, 11, 12, 17, 19),1] <- NA
test %>%
mutate(gap = case_when((is.na(lag(height)) |
is.na(lead(height))) &
!is.na(height) &
time != min(time) ~ TRUE,
(!is.na(lag(height)) |
!is.na(lead(height))) & !is.na(height) ~ FALSE,
TRUE ~ NA),
two_groups = is.na(lag(height)) &
is.na(lead(height)) &
time != min(time) &
time != max(time)) %>%
bind_rows(., filter(., two_groups)) %>%
arrange(time) %>%
group_by(gap) %>%
mutate(group = ceiling(row_number()/2)) %>%
ungroup() %>%
mutate(gap = ifelse(gap, group, NA)) %>%
ggplot(aes(x = time, y = height)) +
geom_point() +
geom_line() +
geom_line(data = . %>% filter(!is.na(height), gap > 0), aes(group = gap), lty = "dashed") +
theme_bw()
aes_string
?aes_string
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
vector_hist <- function(.data, ...){
d <- data.frame(val = .data)
ggplot(d, aes(x = val), bins = ...) +
geom_histogram()
}
rnorm(100) %>% vector_hist()
rnorm(100) %>% vector_hist(30)
rnorm(100) %>% vector_hist(20)
vector_hist <- function(.data, ...){
d <- data.frame(val = .data)
ggplot(d, aes(x = val)) +
geom_histogram(bins = ...)
}
rnorm(100) %>% vector_hist(20)
vector_hist <- function(.data, ...){
d <- data.frame(val = .data)
ggplot(d, aes(x = val)) +
geom_histogram(aes(bins = ...))
}
rnorm(100) %>% vector_hist(20)
rnorm(100) %>% vector_hist(20)
vector_hist <- function(.data, ...){
d <- data.frame(val = .data)
ggplot(d, aes(x = val)) +
geom_histogram(bins = ...)
}
rnorm(100) %>% vector_hist(20)
vector_hist <- function(.data, bins = NULL){
d <- data.frame(val = .data)
ggplot(d, aes(x = val)) +
geom_histogram(bins = bins)
}
rnorm(100) %>% vector_hist(20)
rnorm(100) %>% vector_hist(40)
rnorm(100) %>% vector_hist(70)
rnorm(100) %>% vector_hist()
rnorm(100) %>% vector_hist()
rnorm(100) %>% vector_hist(40)
roxygen2::roxygenise()
library(MCMsBasics)
library(MCMsBasics)
